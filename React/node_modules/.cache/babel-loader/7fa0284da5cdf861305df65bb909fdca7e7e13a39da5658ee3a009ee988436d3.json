{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19736\\\\Node React Projects\\\\user-management\\\\React\\\\src\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  setUsers\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const validateEmailFormat = email => {\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailPattern.test(email);\n  };\n  const handleEmailChange = e => {\n    const inputEmail = e.target.value;\n    setEmail(inputEmail);\n    if (!validateEmailFormat(inputEmail)) {\n      setEmailError('Please enter a valid email address');\n    } else {\n      setEmailError('');\n    }\n  };\n  const validateForm = () => {\n    setError('');\n    setEmailError('');\n    if (!name) {\n      setError('Name is required');\n      return false;\n    } else if (name.length < 3) {\n      setError('Name must be at least 3 characters long');\n      return false;\n    }\n    if (!email) {\n      setEmailError('Email is required');\n      return false;\n    } else if (!validateEmailFormat(email)) {\n      setEmailError('Please enter a valid email address');\n      return false;\n    }\n    return true;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    const response = await fetch('http://localhost:3000/add-user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      alert(`User added successfully with ID: ${data.id}`);\n      setUsers(prevUsers => [...prevUsers, {\n        id: data.id,\n        name,\n        email\n      }]); // Add new user to the list\n      setName(''); // Reset form fields\n      setEmail('');\n    } else {\n      const errorMessage = await response.text();\n      alert(errorMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: handleEmailChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(UserForm, \"k1WzTTrJ8cSSFvf6EdKd4Xu+0AI=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UserForm","setUsers","_s","name","setName","email","setEmail","error","setError","emailError","setEmailError","validateEmailFormat","emailPattern","test","handleEmailChange","e","inputEmail","target","value","validateForm","length","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","data","json","alert","id","prevUsers","errorMessage","text","onSubmit","children","type","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/19736/Node React Projects/user-management/React/src/UserForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UserForm = ({ setUsers }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [emailError, setEmailError] = useState('');\r\n\r\n    const validateEmailFormat = (email) => {\r\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n        return emailPattern.test(email);\r\n    };\r\n\r\n    const handleEmailChange = (e) => {\r\n        const inputEmail = e.target.value;\r\n        setEmail(inputEmail);\r\n\r\n        if (!validateEmailFormat(inputEmail)) {\r\n            setEmailError('Please enter a valid email address');\r\n        } else {\r\n            setEmailError('');\r\n        }\r\n    };\r\n\r\n    const validateForm = () => {\r\n        setError('');\r\n        setEmailError('');\r\n\r\n        if (!name) {\r\n            setError('Name is required');\r\n            return false;\r\n        } else if (name.length < 3) {\r\n            setError('Name must be at least 3 characters long');\r\n            return false;\r\n        }\r\n\r\n        if (!email) {\r\n            setEmailError('Email is required');\r\n            return false;\r\n        } else if (!validateEmailFormat(email)) {\r\n            setEmailError('Please enter a valid email address');\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        const response = await fetch('http://localhost:3000/add-user', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ name, email }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            const data = await response.json();\r\n            alert(`User added successfully with ID: ${data.id}`);\r\n            setUsers(prevUsers => [...prevUsers, { id: data.id, name, email }]); // Add new user to the list\r\n            setName(''); // Reset form fields\r\n            setEmail('');\r\n        } else {\r\n            const errorMessage = await response.text();\r\n            alert(errorMessage);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label>\r\n                Name:\r\n                <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n            </label>\r\n            <br />\r\n            <label>\r\n                Email:\r\n                <input type=\"email\" value={email} onChange={handleEmailChange} required />\r\n                {emailError && <p style={{ color: 'red' }}>{emailError}</p>}\r\n            </label>\r\n            <br />\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            <button type=\"submit\">Add User</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default UserForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}